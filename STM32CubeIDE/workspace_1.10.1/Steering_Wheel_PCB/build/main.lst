ARM GAS  /tmp/ccyfxfHh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB336:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccyfxfHh.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** ADC_HandleTypeDef hadc2;
  43:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** FDCAN_HandleTypeDef hfdcan1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  48:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** //FDCAN_RxHeaderTypeDef RxHeader;
  52:Core/Src/main.c **** FDCAN_TxHeaderTypeDef TxHeader;
  53:Core/Src/main.c **** //uint8_t RxData[8];
  54:Core/Src/main.c **** uint8_t TxData[8];
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_DMA_Init(void);
  61:Core/Src/main.c **** static void MX_FDCAN1_Init(void);
  62:Core/Src/main.c **** static void MX_TIM4_Init(void);
  63:Core/Src/main.c **** static void MX_ADC2_Init(void);
  64:Core/Src/main.c **** static void MX_TIM1_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c ****   /* USER CODE END 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.c ****   HAL_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.c ****   /* USER CODE END Init */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccyfxfHh.s 			page 3


  89:Core/Src/main.c ****   /* Configure the system clock */
  90:Core/Src/main.c ****   SystemClock_Config();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  97:Core/Src/main.c ****   MX_DMA_Init();
  98:Core/Src/main.c ****   MX_FDCAN1_Init();
  99:Core/Src/main.c ****   MX_TIM4_Init();
 100:Core/Src/main.c ****   MX_ADC2_Init();
 101:Core/Src/main.c ****   MX_TIM1_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   //Defining variables
 104:Core/Src/main.c ****   #define ADC_BUF_LEN 2
 105:Core/Src/main.c ****   uint16_t AdcResults[ADC_BUF_LEN];
 106:Core/Src/main.c ****   uint8_t  digital_word = 0; //Digital Input Data
 107:Core/Src/main.c ****   uint16_t analog1_word = 0; //Analog Input Data 1
 108:Core/Src/main.c ****   uint16_t analog2_word = 0; //Analog Input Data 2
 109:Core/Src/main.c ****   uint8_t analog1_half1 = 0; //Lower 8 bits
 110:Core/Src/main.c ****   uint8_t analog1_half2 = 0; //Upper 4 bits
 111:Core/Src/main.c ****   uint8_t analog2_half1 = 0; //Lower 8 bits
 112:Core/Src/main.c ****   uint8_t analog2_half2 = 0; //Upper 4 bits
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   //Starting timers
 115:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 116:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   //Starting DMA
 119:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc2, (uint32_t*)AdcResults, ADC_BUF_LEN);
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Infinite loop */
 123:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 124:Core/Src/main.c ****   while (1)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 129:Core/Src/main.c **** 	analog1_word = AdcResults[0]; //Analog Input Data 1
 130:Core/Src/main.c **** 	analog2_word = AdcResults[1]; //Analog Input Data 2
 131:Core/Src/main.c **** 	analog1_half1 = (0b11111111 & analog1_word); //lower 8 bits
 132:Core/Src/main.c **** 	analog1_half2 = ((0b11111111<<8) & analog1_word)>>8; //upper 8 bits
 133:Core/Src/main.c **** 	analog2_half1 = (0b11111111 & analog2_word); //lower 8 bits
 134:Core/Src/main.c **** 	analog2_half2 = ((0b11111111<<8) & analog2_word)>>8; //upper 8 bits
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 	//Connectors from right to left mapped to bits 0 through 7. J6 (last connector on the left) is unu
 137:Core/Src/main.c **** 	//| MSB:J10 | J12 | J7 | J9 | J11 | J13 | J5 | J8:LSB |
 138:Core/Src/main.c **** 	digital_word = 0x00;
 139:Core/Src/main.c **** 	digital_word = digital_word |  HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13); 	//PB6, J8
 140:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14)) <<1; 		//PB5, J5
 141:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) <<2; 	//PB4, J13
 142:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) <<3; 	//PB3, J11
 143:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) <<4; 	//PB2, J9
 144:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) <<5; 	//PB1, J7
 145:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) <<6; 	//PB9, J12
ARM GAS  /tmp/ccyfxfHh.s 			page 4


 146:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) <<7; 	//PB8, J10
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 	//Defining CAN message to be sent
 149:Core/Src/main.c **** 	TxData[0] = analog2_half2;//analog2 upper 4 bits
 150:Core/Src/main.c **** 	TxData[1] = analog2_half1;//analog2 lower 8 bits
 151:Core/Src/main.c **** 	TxData[2] = analog1_half2;//analog1 upper 4 bits
 152:Core/Src/main.c **** 	TxData[3] = analog1_half1;//analog1 lower 8 bits
 153:Core/Src/main.c **** 	TxData[4] = digital_word; //Digital input Byte
 154:Core/Src/main.c **** 	TxData[5] = 0x00;
 155:Core/Src/main.c **** 	TxData[6] = 0x00;
 156:Core/Src/main.c **** 	TxData[7] = 0x00;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 	//Toggling indicator output (debug)
 159:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 160:Core/Src/main.c **** 	//HAL_Delay(8);
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 179:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV8;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccyfxfHh.s 			page 5


 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c **** }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief ADC2 Initialization Function
 213:Core/Src/main.c ****   * @param None
 214:Core/Src/main.c ****   * @retval None
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c **** static void MX_ADC2_Init(void)
 217:Core/Src/main.c **** {
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 0 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END ADC2_Init 0 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END ADC2_Init 1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /** Common config
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c ****   hadc2.Instance = ADC2;
 232:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 233:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 234:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 235:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 236:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 237:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 238:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 239:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 240:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 2;
 241:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 242:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T1_TRGO;
 243:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 244:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 245:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 246:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 247:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 248:Core/Src/main.c ****   {
 249:Core/Src/main.c ****     Error_Handler();
 250:Core/Src/main.c ****   }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /** Configure Regular Channel
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_13;
 255:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 256:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 257:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 258:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 259:Core/Src/main.c ****   sConfig.Offset = 0;
ARM GAS  /tmp/ccyfxfHh.s 			page 6


 260:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 261:Core/Src/main.c ****   {
 262:Core/Src/main.c ****     Error_Handler();
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /** Configure Regular Channel
 266:Core/Src/main.c ****   */
 267:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 268:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 269:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     Error_Handler();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE END ADC2_Init 2 */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****   * @brief FDCAN1 Initialization Function
 281:Core/Src/main.c ****   * @param None
 282:Core/Src/main.c ****   * @retval None
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c **** static void MX_FDCAN1_Init(void)
 285:Core/Src/main.c **** {
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 0 */
 288:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 0 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 1 */
 291:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 1 */
 292:Core/Src/main.c ****   hfdcan1.Instance = FDCAN1;
 293:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 294:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 295:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 296:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = DISABLE;
 297:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = DISABLE;
 298:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 299:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 1;
 300:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 3;
 301:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 16;
 302:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 3;
 303:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 1;
 304:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 3;
 305:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 16;
 306:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 3;
 307:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 0;
 308:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 309:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 310:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 2 */
 315:Core/Src/main.c ****   FDCAN_FilterTypeDef sFilterConfig;
 316:Core/Src/main.c **** 
ARM GAS  /tmp/ccyfxfHh.s 			page 7


 317:Core/Src/main.c ****     /* Configure Rx filter */
 318:Core/Src/main.c ****     sFilterConfig.IdType = FDCAN_STANDARD_ID;
 319:Core/Src/main.c ****     sFilterConfig.FilterIndex = 0;
 320:Core/Src/main.c ****     sFilterConfig.FilterType = FDCAN_FILTER_MASK;
 321:Core/Src/main.c ****     sFilterConfig.FilterConfig = FDCAN_FILTER_TO_RXFIFO0;
 322:Core/Src/main.c ****     sFilterConfig.FilterID1 = 0x321;
 323:Core/Src/main.c ****     sFilterConfig.FilterID2 = 0x7FF;
 324:Core/Src/main.c ****     if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK)
 325:Core/Src/main.c ****     {
 326:Core/Src/main.c ****       Error_Handler();
 327:Core/Src/main.c ****     }
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****     /* Configure global filter:
 330:Core/Src/main.c ****        Filter all remote frames with STD and EXT ID
 331:Core/Src/main.c ****        Reject non matching frames with STD ID and EXT ID */
 332:Core/Src/main.c ****     if (HAL_FDCAN_ConfigGlobalFilter(&hfdcan1, FDCAN_REJECT, FDCAN_REJECT, FDCAN_FILTER_REMOTE, FDC
 333:Core/Src/main.c ****     {
 334:Core/Src/main.c ****       Error_Handler();
 335:Core/Src/main.c ****     }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****     /* Start the FDCAN module */
 338:Core/Src/main.c ****     if (HAL_FDCAN_Start(&hfdcan1) != HAL_OK)
 339:Core/Src/main.c ****     {
 340:Core/Src/main.c ****       Error_Handler();
 341:Core/Src/main.c ****     }
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****     if (HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
 344:Core/Src/main.c ****     {
 345:Core/Src/main.c ****       Error_Handler();
 346:Core/Src/main.c ****     }
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****     /* Prepare Tx Header */
 349:Core/Src/main.c ****     TxHeader.Identifier = 0x400; //Determines ID of CAN message
 350:Core/Src/main.c ****     TxHeader.IdType = FDCAN_STANDARD_ID;
 351:Core/Src/main.c ****     TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 352:Core/Src/main.c ****     TxHeader.DataLength = FDCAN_DLC_BYTES_8; //Specifies the number of data bytes to be transmitted
 353:Core/Src/main.c ****     TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 354:Core/Src/main.c ****     TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 355:Core/Src/main.c ****     TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 356:Core/Src/main.c ****     TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 357:Core/Src/main.c ****     TxHeader.MessageMarker = 0;
 358:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 2 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** }
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** /**
 363:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 364:Core/Src/main.c ****   * @param None
 365:Core/Src/main.c ****   * @retval None
 366:Core/Src/main.c ****   */
 367:Core/Src/main.c **** static void MX_TIM1_Init(void)
 368:Core/Src/main.c **** {
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 373:Core/Src/main.c **** 
ARM GAS  /tmp/ccyfxfHh.s 			page 8


 374:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 375:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 380:Core/Src/main.c ****   htim1.Instance = TIM1;
 381:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 382:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 383:Core/Src/main.c ****   htim1.Init.Period = 1599;
 384:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 385:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 386:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 387:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 388:Core/Src/main.c ****   {
 389:Core/Src/main.c ****     Error_Handler();
 390:Core/Src/main.c ****   }
 391:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 392:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****     Error_Handler();
 395:Core/Src/main.c ****   }
 396:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 397:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 398:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 399:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 400:Core/Src/main.c ****   {
 401:Core/Src/main.c ****     Error_Handler();
 402:Core/Src/main.c ****   }
 403:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** }
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** /**
 410:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 411:Core/Src/main.c ****   * @param None
 412:Core/Src/main.c ****   * @retval None
 413:Core/Src/main.c ****   */
 414:Core/Src/main.c **** static void MX_TIM4_Init(void)
 415:Core/Src/main.c **** {
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 422:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 427:Core/Src/main.c ****   htim4.Instance = TIM4;
 428:Core/Src/main.c ****   htim4.Init.Prescaler = 100 - 1;
 429:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 430:Core/Src/main.c ****   htim4.Init.Period = 1279;
ARM GAS  /tmp/ccyfxfHh.s 			page 9


 431:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 432:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 433:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 434:Core/Src/main.c ****   {
 435:Core/Src/main.c ****     Error_Handler();
 436:Core/Src/main.c ****   }
 437:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 438:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 443:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 444:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 445:Core/Src/main.c ****   {
 446:Core/Src/main.c ****     Error_Handler();
 447:Core/Src/main.c ****   }
 448:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 449:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** }
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** /**
 454:Core/Src/main.c ****   * Enable DMA controller clock
 455:Core/Src/main.c ****   */
 456:Core/Src/main.c **** static void MX_DMA_Init(void)
 457:Core/Src/main.c **** {
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* DMA controller clock enable */
 460:Core/Src/main.c ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 461:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* DMA interrupt init */
 464:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 465:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 466:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** }
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** /**
 471:Core/Src/main.c ****   * @brief GPIO Initialization Function
 472:Core/Src/main.c ****   * @param None
 473:Core/Src/main.c ****   * @retval None
 474:Core/Src/main.c ****   */
 475:Core/Src/main.c **** static void MX_GPIO_Init(void)
 476:Core/Src/main.c **** {
  28              		.loc 1 476 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              	.LCFI1:
ARM GAS  /tmp/ccyfxfHh.s 			page 10


  39              		.cfi_def_cfa_offset 48
 477:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 477 3 view .LVU1
  41              		.loc 1 477 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 478:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 479:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 482:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 482 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 482 3 view .LVU4
  51              		.loc 1 482 3 view .LVU5
  52 0010 234B     		ldr	r3, .L3
  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 482 3 view .LVU6
  57 001a DA6C     		ldr	r2, [r3, #76]
  58 001c 02F00402 		and	r2, r2, #4
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 482 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 482 3 view .LVU8
 483:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  64              		.loc 1 483 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 483 3 view .LVU10
  67              		.loc 1 483 3 view .LVU11
  68 0024 DA6C     		ldr	r2, [r3, #76]
  69 0026 42F02002 		orr	r2, r2, #32
  70 002a DA64     		str	r2, [r3, #76]
  71              		.loc 1 483 3 view .LVU12
  72 002c DA6C     		ldr	r2, [r3, #76]
  73 002e 02F02002 		and	r2, r2, #32
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 483 3 view .LVU13
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 483 3 view .LVU14
 484:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 484 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 484 3 view .LVU16
  82              		.loc 1 484 3 view .LVU17
  83 0036 DA6C     		ldr	r2, [r3, #76]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c DA64     		str	r2, [r3, #76]
  86              		.loc 1 484 3 view .LVU18
  87 003e DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccyfxfHh.s 			page 11


  88 0040 02F00102 		and	r2, r2, #1
  89 0044 0392     		str	r2, [sp, #12]
  90              		.loc 1 484 3 view .LVU19
  91 0046 039A     		ldr	r2, [sp, #12]
  92              	.LBE6:
  93              		.loc 1 484 3 view .LVU20
 485:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 485 3 view .LVU21
  95              	.LBB7:
  96              		.loc 1 485 3 view .LVU22
  97              		.loc 1 485 3 view .LVU23
  98 0048 DA6C     		ldr	r2, [r3, #76]
  99 004a 42F00202 		orr	r2, r2, #2
 100 004e DA64     		str	r2, [r3, #76]
 101              		.loc 1 485 3 view .LVU24
 102 0050 DB6C     		ldr	r3, [r3, #76]
 103 0052 03F00203 		and	r3, r3, #2
 104 0056 0493     		str	r3, [sp, #16]
 105              		.loc 1 485 3 view .LVU25
 106 0058 049B     		ldr	r3, [sp, #16]
 107              	.LBE7:
 108              		.loc 1 485 3 view .LVU26
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PB5_Pin PB4_Pin */
 488:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13|PB5_Pin|PB4_Pin;
 109              		.loc 1 488 3 view .LVU27
 110              		.loc 1 488 23 is_stmt 0 view .LVU28
 111 005a 4FF46043 		mov	r3, #57344
 112 005e 0593     		str	r3, [sp, #20]
 489:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 113              		.loc 1 489 3 is_stmt 1 view .LVU29
 490:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 490 3 view .LVU30
 491:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 115              		.loc 1 491 3 view .LVU31
 116 0060 05A9     		add	r1, sp, #20
 117 0062 1048     		ldr	r0, .L3+4
 118 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL0:
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /*Configure GPIO pin : PB3_Pin */
 494:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB3_Pin;
 120              		.loc 1 494 3 view .LVU32
 121              		.loc 1 494 23 is_stmt 0 view .LVU33
 122 0068 0223     		movs	r3, #2
 123 006a 0593     		str	r3, [sp, #20]
 495:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 124              		.loc 1 495 3 is_stmt 1 view .LVU34
 125              		.loc 1 495 24 is_stmt 0 view .LVU35
 126 006c 0694     		str	r4, [sp, #24]
 496:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 496 3 is_stmt 1 view .LVU36
 128              		.loc 1 496 24 is_stmt 0 view .LVU37
 129 006e 0794     		str	r4, [sp, #28]
 497:Core/Src/main.c ****   HAL_GPIO_Init(PB3_GPIO_Port, &GPIO_InitStruct);
 130              		.loc 1 497 3 is_stmt 1 view .LVU38
 131 0070 05A9     		add	r1, sp, #20
ARM GAS  /tmp/ccyfxfHh.s 			page 12


 132 0072 0D48     		ldr	r0, .L3+8
 133 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL1:
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /*Configure GPIO pins : PB2_Pin PB1_Pin PB9_Pin */
 500:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB2_Pin|PB1_Pin|PB9_Pin;
 135              		.loc 1 500 3 view .LVU39
 136              		.loc 1 500 23 is_stmt 0 view .LVU40
 137 0078 8323     		movs	r3, #131
 138 007a 0593     		str	r3, [sp, #20]
 501:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 139              		.loc 1 501 3 is_stmt 1 view .LVU41
 140              		.loc 1 501 24 is_stmt 0 view .LVU42
 141 007c 0694     		str	r4, [sp, #24]
 502:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 502 3 is_stmt 1 view .LVU43
 143              		.loc 1 502 24 is_stmt 0 view .LVU44
 144 007e 0794     		str	r4, [sp, #28]
 503:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 145              		.loc 1 503 3 is_stmt 1 view .LVU45
 146 0080 05A9     		add	r1, sp, #20
 147 0082 4FF09040 		mov	r0, #1207959552
 148 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /*Configure GPIO pins : PB8_Pin PB7_Pin */
 506:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB8_Pin|PB7_Pin;
 150              		.loc 1 506 3 view .LVU46
 151              		.loc 1 506 23 is_stmt 0 view .LVU47
 152 008a 0323     		movs	r3, #3
 153 008c 0593     		str	r3, [sp, #20]
 507:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 154              		.loc 1 507 3 is_stmt 1 view .LVU48
 155              		.loc 1 507 24 is_stmt 0 view .LVU49
 156 008e 0694     		str	r4, [sp, #24]
 508:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 508 3 is_stmt 1 view .LVU50
 158              		.loc 1 508 24 is_stmt 0 view .LVU51
 159 0090 0794     		str	r4, [sp, #28]
 509:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 160              		.loc 1 509 3 is_stmt 1 view .LVU52
 161 0092 05A9     		add	r1, sp, #20
 162 0094 0548     		ldr	r0, .L3+12
 163 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL3:
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 512:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 513:Core/Src/main.c **** }
 165              		.loc 1 513 1 is_stmt 0 view .LVU53
 166 009a 0AB0     		add	sp, sp, #40
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 8
 169              		@ sp needed
 170 009c 10BD     		pop	{r4, pc}
 171              	.L4:
 172 009e 00BF     		.align	2
ARM GAS  /tmp/ccyfxfHh.s 			page 13


 173              	.L3:
 174 00a0 00100240 		.word	1073876992
 175 00a4 00080048 		.word	1207961600
 176 00a8 00140048 		.word	1207964672
 177 00ac 00040048 		.word	1207960576
 178              		.cfi_endproc
 179              	.LFE336:
 181              		.section	.text.MX_DMA_Init,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	MX_DMA_Init:
 188              	.LFB335:
 457:Core/Src/main.c **** 
 189              		.loc 1 457 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 00B5     		push	{lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 14, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              	.LCFI4:
 199              		.cfi_def_cfa_offset 16
 460:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 200              		.loc 1 460 3 view .LVU55
 201              	.LBB8:
 460:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 202              		.loc 1 460 3 view .LVU56
 460:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 203              		.loc 1 460 3 view .LVU57
 204 0004 0E4B     		ldr	r3, .L7
 205 0006 9A6C     		ldr	r2, [r3, #72]
 206 0008 42F00402 		orr	r2, r2, #4
 207 000c 9A64     		str	r2, [r3, #72]
 460:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 208              		.loc 1 460 3 view .LVU58
 209 000e 9A6C     		ldr	r2, [r3, #72]
 210 0010 02F00402 		and	r2, r2, #4
 211 0014 0092     		str	r2, [sp]
 460:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 212              		.loc 1 460 3 view .LVU59
 213 0016 009A     		ldr	r2, [sp]
 214              	.LBE8:
 460:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 215              		.loc 1 460 3 view .LVU60
 461:Core/Src/main.c **** 
 216              		.loc 1 461 3 view .LVU61
 217              	.LBB9:
 461:Core/Src/main.c **** 
 218              		.loc 1 461 3 view .LVU62
 461:Core/Src/main.c **** 
 219              		.loc 1 461 3 view .LVU63
 220 0018 9A6C     		ldr	r2, [r3, #72]
 221 001a 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccyfxfHh.s 			page 14


 222 001e 9A64     		str	r2, [r3, #72]
 461:Core/Src/main.c **** 
 223              		.loc 1 461 3 view .LVU64
 224 0020 9B6C     		ldr	r3, [r3, #72]
 225 0022 03F00103 		and	r3, r3, #1
 226 0026 0193     		str	r3, [sp, #4]
 461:Core/Src/main.c **** 
 227              		.loc 1 461 3 view .LVU65
 228 0028 019B     		ldr	r3, [sp, #4]
 229              	.LBE9:
 461:Core/Src/main.c **** 
 230              		.loc 1 461 3 view .LVU66
 465:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 231              		.loc 1 465 3 view .LVU67
 232 002a 0022     		movs	r2, #0
 233 002c 1146     		mov	r1, r2
 234 002e 0B20     		movs	r0, #11
 235 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 236              	.LVL4:
 466:Core/Src/main.c **** 
 237              		.loc 1 466 3 view .LVU68
 238 0034 0B20     		movs	r0, #11
 239 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 240              	.LVL5:
 468:Core/Src/main.c **** 
 241              		.loc 1 468 1 is_stmt 0 view .LVU69
 242 003a 03B0     		add	sp, sp, #12
 243              	.LCFI5:
 244              		.cfi_def_cfa_offset 4
 245              		@ sp needed
 246 003c 5DF804FB 		ldr	pc, [sp], #4
 247              	.L8:
 248              		.align	2
 249              	.L7:
 250 0040 00100240 		.word	1073876992
 251              		.cfi_endproc
 252              	.LFE335:
 254              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 255              		.align	1
 256              		.global	HAL_ADC_ConvCpltCallback
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 261              	HAL_ADC_ConvCpltCallback:
 262              	.LVL6:
 263              	.LFB337:
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** //ADC Callback function
 518:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc2)
 519:Core/Src/main.c **** {
 264              		.loc 1 519 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		.loc 1 519 1 is_stmt 0 view .LVU71
ARM GAS  /tmp/ccyfxfHh.s 			page 15


 269 0000 08B5     		push	{r3, lr}
 270              	.LCFI6:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 520:Core/Src/main.c **** 	UNUSED(hadc2); //is this functionally important?
 274              		.loc 1 520 2 is_stmt 1 view .LVU72
 521:Core/Src/main.c **** 	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 275              		.loc 1 521 2 view .LVU73
 276 0002 4FF40051 		mov	r1, #8192
 277 0006 0248     		ldr	r0, .L11
 278              	.LVL7:
 279              		.loc 1 521 2 is_stmt 0 view .LVU74
 280 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 281              	.LVL8:
 522:Core/Src/main.c **** 	//HAL_GPIO_WritePin(port, pinname, GPIO_PIN_SET);
 523:Core/Src/main.c **** 	//asm("nop");
 524:Core/Src/main.c **** 	//HAL_GPIO_WrtiePin(port, pinname, GPIO_PIN_RESET);
 525:Core/Src/main.c **** }
 282              		.loc 1 525 1 view .LVU75
 283 000c 08BD     		pop	{r3, pc}
 284              	.L12:
 285 000e 00BF     		.align	2
 286              	.L11:
 287 0010 00080048 		.word	1207961600
 288              		.cfi_endproc
 289              	.LFE337:
 291              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 292              		.align	1
 293              		.global	HAL_TIM_PeriodElapsedCallback
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 298              	HAL_TIM_PeriodElapsedCallback:
 299              	.LVL9:
 300              	.LFB338:
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** //updates the CAN TX FIFO precisely every 8ms
 528:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 529:Core/Src/main.c **** {
 301              		.loc 1 529 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		.loc 1 529 1 is_stmt 0 view .LVU77
 306 0000 08B5     		push	{r3, lr}
 307              	.LCFI7:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 3, -8
 310              		.cfi_offset 14, -4
 530:Core/Src/main.c **** 	//Checks that the interrupt was generated by clock 4
 531:Core/Src/main.c **** 	if(htim == &htim4)
 311              		.loc 1 531 2 is_stmt 1 view .LVU78
 312              		.loc 1 531 4 is_stmt 0 view .LVU79
 313 0002 054B     		ldr	r3, .L17
 314 0004 8342     		cmp	r3, r0
 315 0006 00D0     		beq	.L16
ARM GAS  /tmp/ccyfxfHh.s 			page 16


 316              	.LVL10:
 317              	.L13:
 532:Core/Src/main.c **** 	{
 533:Core/Src/main.c **** 		//Adds another message to the CAN FIFO every 8ms
 534:Core/Src/main.c **** 		HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData);
 535:Core/Src/main.c **** 	}
 536:Core/Src/main.c **** 	if(htim == &htim1)
 537:Core/Src/main.c **** 	{
 538:Core/Src/main.c **** 		//HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 539:Core/Src/main.c **** 	}
 540:Core/Src/main.c **** }
 318              		.loc 1 540 1 view .LVU80
 319 0008 08BD     		pop	{r3, pc}
 320              	.LVL11:
 321              	.L16:
 534:Core/Src/main.c **** 	}
 322              		.loc 1 534 3 is_stmt 1 view .LVU81
 323 000a 044A     		ldr	r2, .L17+4
 324 000c 0449     		ldr	r1, .L17+8
 325 000e 0548     		ldr	r0, .L17+12
 326              	.LVL12:
 534:Core/Src/main.c **** 	}
 327              		.loc 1 534 3 is_stmt 0 view .LVU82
 328 0010 FFF7FEFF 		bl	HAL_FDCAN_AddMessageToTxFifoQ
 329              	.LVL13:
 536:Core/Src/main.c **** 	{
 330              		.loc 1 536 2 is_stmt 1 view .LVU83
 539:Core/Src/main.c **** }
 331              		.loc 1 539 2 view .LVU84
 332              		.loc 1 540 1 is_stmt 0 view .LVU85
 333 0014 F8E7     		b	.L13
 334              	.L18:
 335 0016 00BF     		.align	2
 336              	.L17:
 337 0018 00000000 		.word	.LANCHOR0
 338 001c 00000000 		.word	.LANCHOR1
 339 0020 00000000 		.word	.LANCHOR2
 340 0024 00000000 		.word	.LANCHOR3
 341              		.cfi_endproc
 342              	.LFE338:
 344              		.section	.text.Error_Handler,"ax",%progbits
 345              		.align	1
 346              		.global	Error_Handler
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	Error_Handler:
 352              	.LFB339:
 541:Core/Src/main.c **** /* USER CODE END 4 */
 542:Core/Src/main.c **** 
 543:Core/Src/main.c **** /**
 544:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 545:Core/Src/main.c ****   * @retval None
 546:Core/Src/main.c ****   */
 547:Core/Src/main.c **** void Error_Handler(void)
 548:Core/Src/main.c **** {
 353              		.loc 1 548 1 is_stmt 1 view -0
ARM GAS  /tmp/ccyfxfHh.s 			page 17


 354              		.cfi_startproc
 355              		@ Volatile: function does not return.
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 549:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 550:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 551:Core/Src/main.c ****   __disable_irq();
 359              		.loc 1 551 3 view .LVU87
 360              	.LBB10:
 361              	.LBI10:
 362              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccyfxfHh.s 			page 18


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/ccyfxfHh.s 			page 19


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
ARM GAS  /tmp/ccyfxfHh.s 			page 20


 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 363              		.loc 2 207 27 view .LVU88
 364              	.LBB11:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 365              		.loc 2 209 3 view .LVU89
 366              		.syntax unified
 367              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 368 0000 72B6     		cpsid i
 369              	@ 0 "" 2
ARM GAS  /tmp/ccyfxfHh.s 			page 21


 370              		.thumb
 371              		.syntax unified
 372              	.L20:
 373              	.LBE11:
 374              	.LBE10:
 552:Core/Src/main.c ****   while (1)
 375              		.loc 1 552 3 discriminator 1 view .LVU90
 553:Core/Src/main.c ****   {
 554:Core/Src/main.c ****   }
 376              		.loc 1 554 3 discriminator 1 view .LVU91
 552:Core/Src/main.c ****   while (1)
 377              		.loc 1 552 9 discriminator 1 view .LVU92
 378 0002 FEE7     		b	.L20
 379              		.cfi_endproc
 380              	.LFE339:
 382              		.section	.text.MX_FDCAN1_Init,"ax",%progbits
 383              		.align	1
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	MX_FDCAN1_Init:
 389              	.LFB332:
 285:Core/Src/main.c **** 
 390              		.loc 1 285 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 24
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 10B5     		push	{r4, lr}
 395              	.LCFI8:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 399 0002 88B0     		sub	sp, sp, #32
 400              	.LCFI9:
 401              		.cfi_def_cfa_offset 40
 292:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 402              		.loc 1 292 3 view .LVU94
 292:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 403              		.loc 1 292 20 is_stmt 0 view .LVU95
 404 0004 2D48     		ldr	r0, .L33
 405 0006 2E4B     		ldr	r3, .L33+4
 406 0008 0360     		str	r3, [r0]
 293:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 407              		.loc 1 293 3 is_stmt 1 view .LVU96
 293:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 408              		.loc 1 293 29 is_stmt 0 view .LVU97
 409 000a 0023     		movs	r3, #0
 410 000c 4360     		str	r3, [r0, #4]
 294:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 411              		.loc 1 294 3 is_stmt 1 view .LVU98
 294:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 412              		.loc 1 294 28 is_stmt 0 view .LVU99
 413 000e 8360     		str	r3, [r0, #8]
 295:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = DISABLE;
 414              		.loc 1 295 3 is_stmt 1 view .LVU100
 295:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = DISABLE;
 415              		.loc 1 295 21 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccyfxfHh.s 			page 22


 416 0010 C360     		str	r3, [r0, #12]
 296:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = DISABLE;
 417              		.loc 1 296 3 is_stmt 1 view .LVU102
 296:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = DISABLE;
 418              		.loc 1 296 35 is_stmt 0 view .LVU103
 419 0012 0374     		strb	r3, [r0, #16]
 297:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 420              		.loc 1 297 3 is_stmt 1 view .LVU104
 297:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 421              		.loc 1 297 30 is_stmt 0 view .LVU105
 422 0014 4374     		strb	r3, [r0, #17]
 298:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 1;
 423              		.loc 1 298 3 is_stmt 1 view .LVU106
 298:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 1;
 424              		.loc 1 298 34 is_stmt 0 view .LVU107
 425 0016 8374     		strb	r3, [r0, #18]
 299:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 3;
 426              		.loc 1 299 3 is_stmt 1 view .LVU108
 299:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 3;
 427              		.loc 1 299 33 is_stmt 0 view .LVU109
 428 0018 0124     		movs	r4, #1
 429 001a 4461     		str	r4, [r0, #20]
 300:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 16;
 430              		.loc 1 300 3 is_stmt 1 view .LVU110
 300:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 16;
 431              		.loc 1 300 37 is_stmt 0 view .LVU111
 432 001c 0322     		movs	r2, #3
 433 001e 8261     		str	r2, [r0, #24]
 301:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 3;
 434              		.loc 1 301 3 is_stmt 1 view .LVU112
 301:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 3;
 435              		.loc 1 301 32 is_stmt 0 view .LVU113
 436 0020 1021     		movs	r1, #16
 437 0022 C161     		str	r1, [r0, #28]
 302:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 1;
 438              		.loc 1 302 3 is_stmt 1 view .LVU114
 302:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 1;
 439              		.loc 1 302 32 is_stmt 0 view .LVU115
 440 0024 0262     		str	r2, [r0, #32]
 303:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 3;
 441              		.loc 1 303 3 is_stmt 1 view .LVU116
 303:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 3;
 442              		.loc 1 303 30 is_stmt 0 view .LVU117
 443 0026 4462     		str	r4, [r0, #36]
 304:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 16;
 444              		.loc 1 304 3 is_stmt 1 view .LVU118
 304:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 16;
 445              		.loc 1 304 34 is_stmt 0 view .LVU119
 446 0028 8262     		str	r2, [r0, #40]
 305:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 3;
 447              		.loc 1 305 3 is_stmt 1 view .LVU120
 305:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 3;
 448              		.loc 1 305 29 is_stmt 0 view .LVU121
 449 002a C162     		str	r1, [r0, #44]
 306:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 0;
 450              		.loc 1 306 3 is_stmt 1 view .LVU122
 306:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 0;
ARM GAS  /tmp/ccyfxfHh.s 			page 23


 451              		.loc 1 306 29 is_stmt 0 view .LVU123
 452 002c 0263     		str	r2, [r0, #48]
 307:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 453              		.loc 1 307 3 is_stmt 1 view .LVU124
 307:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 454              		.loc 1 307 30 is_stmt 0 view .LVU125
 455 002e 4363     		str	r3, [r0, #52]
 308:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 456              		.loc 1 308 3 is_stmt 1 view .LVU126
 308:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 457              		.loc 1 308 30 is_stmt 0 view .LVU127
 458 0030 8363     		str	r3, [r0, #56]
 309:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 459              		.loc 1 309 3 is_stmt 1 view .LVU128
 309:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 460              		.loc 1 309 32 is_stmt 0 view .LVU129
 461 0032 C363     		str	r3, [r0, #60]
 310:Core/Src/main.c ****   {
 462              		.loc 1 310 3 is_stmt 1 view .LVU130
 310:Core/Src/main.c ****   {
 463              		.loc 1 310 7 is_stmt 0 view .LVU131
 464 0034 FFF7FEFF 		bl	HAL_FDCAN_Init
 465              	.LVL14:
 310:Core/Src/main.c ****   {
 466              		.loc 1 310 6 view .LVU132
 467 0038 0028     		cmp	r0, #0
 468 003a 34D1     		bne	.L28
 315:Core/Src/main.c **** 
 469              		.loc 1 315 3 is_stmt 1 view .LVU133
 318:Core/Src/main.c ****     sFilterConfig.FilterIndex = 0;
 470              		.loc 1 318 5 view .LVU134
 318:Core/Src/main.c ****     sFilterConfig.FilterIndex = 0;
 471              		.loc 1 318 26 is_stmt 0 view .LVU135
 472 003c 0023     		movs	r3, #0
 473 003e 0293     		str	r3, [sp, #8]
 319:Core/Src/main.c ****     sFilterConfig.FilterType = FDCAN_FILTER_MASK;
 474              		.loc 1 319 5 is_stmt 1 view .LVU136
 319:Core/Src/main.c ****     sFilterConfig.FilterType = FDCAN_FILTER_MASK;
 475              		.loc 1 319 31 is_stmt 0 view .LVU137
 476 0040 0393     		str	r3, [sp, #12]
 320:Core/Src/main.c ****     sFilterConfig.FilterConfig = FDCAN_FILTER_TO_RXFIFO0;
 477              		.loc 1 320 5 is_stmt 1 view .LVU138
 320:Core/Src/main.c ****     sFilterConfig.FilterConfig = FDCAN_FILTER_TO_RXFIFO0;
 478              		.loc 1 320 30 is_stmt 0 view .LVU139
 479 0042 0223     		movs	r3, #2
 480 0044 0493     		str	r3, [sp, #16]
 321:Core/Src/main.c ****     sFilterConfig.FilterID1 = 0x321;
 481              		.loc 1 321 5 is_stmt 1 view .LVU140
 321:Core/Src/main.c ****     sFilterConfig.FilterID1 = 0x321;
 482              		.loc 1 321 32 is_stmt 0 view .LVU141
 483 0046 0123     		movs	r3, #1
 484 0048 0593     		str	r3, [sp, #20]
 322:Core/Src/main.c ****     sFilterConfig.FilterID2 = 0x7FF;
 485              		.loc 1 322 5 is_stmt 1 view .LVU142
 322:Core/Src/main.c ****     sFilterConfig.FilterID2 = 0x7FF;
 486              		.loc 1 322 29 is_stmt 0 view .LVU143
 487 004a 40F22133 		movw	r3, #801
ARM GAS  /tmp/ccyfxfHh.s 			page 24


 488 004e 0693     		str	r3, [sp, #24]
 323:Core/Src/main.c ****     if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK)
 489              		.loc 1 323 5 is_stmt 1 view .LVU144
 323:Core/Src/main.c ****     if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK)
 490              		.loc 1 323 29 is_stmt 0 view .LVU145
 491 0050 40F2FF73 		movw	r3, #2047
 492 0054 0793     		str	r3, [sp, #28]
 324:Core/Src/main.c ****     {
 493              		.loc 1 324 5 is_stmt 1 view .LVU146
 324:Core/Src/main.c ****     {
 494              		.loc 1 324 9 is_stmt 0 view .LVU147
 495 0056 02A9     		add	r1, sp, #8
 496 0058 1848     		ldr	r0, .L33
 497 005a FFF7FEFF 		bl	HAL_FDCAN_ConfigFilter
 498              	.LVL15:
 324:Core/Src/main.c ****     {
 499              		.loc 1 324 8 view .LVU148
 500 005e 20BB     		cbnz	r0, .L29
 332:Core/Src/main.c ****     {
 501              		.loc 1 332 5 is_stmt 1 view .LVU149
 332:Core/Src/main.c ****     {
 502              		.loc 1 332 9 is_stmt 0 view .LVU150
 503 0060 0023     		movs	r3, #0
 504 0062 0093     		str	r3, [sp]
 505 0064 0222     		movs	r2, #2
 506 0066 1146     		mov	r1, r2
 507 0068 1448     		ldr	r0, .L33
 508 006a FFF7FEFF 		bl	HAL_FDCAN_ConfigGlobalFilter
 509              	.LVL16:
 332:Core/Src/main.c ****     {
 510              		.loc 1 332 8 view .LVU151
 511 006e F0B9     		cbnz	r0, .L30
 338:Core/Src/main.c ****     {
 512              		.loc 1 338 5 is_stmt 1 view .LVU152
 338:Core/Src/main.c ****     {
 513              		.loc 1 338 9 is_stmt 0 view .LVU153
 514 0070 1248     		ldr	r0, .L33
 515 0072 FFF7FEFF 		bl	HAL_FDCAN_Start
 516              	.LVL17:
 338:Core/Src/main.c ****     {
 517              		.loc 1 338 8 view .LVU154
 518 0076 E0B9     		cbnz	r0, .L31
 343:Core/Src/main.c ****     {
 519              		.loc 1 343 5 is_stmt 1 view .LVU155
 343:Core/Src/main.c ****     {
 520              		.loc 1 343 9 is_stmt 0 view .LVU156
 521 0078 0022     		movs	r2, #0
 522 007a 0121     		movs	r1, #1
 523 007c 0F48     		ldr	r0, .L33
 524 007e FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 525              	.LVL18:
 343:Core/Src/main.c ****     {
 526              		.loc 1 343 8 view .LVU157
 527 0082 C0B9     		cbnz	r0, .L32
 349:Core/Src/main.c ****     TxHeader.IdType = FDCAN_STANDARD_ID;
 528              		.loc 1 349 5 is_stmt 1 view .LVU158
 349:Core/Src/main.c ****     TxHeader.IdType = FDCAN_STANDARD_ID;
ARM GAS  /tmp/ccyfxfHh.s 			page 25


 529              		.loc 1 349 25 is_stmt 0 view .LVU159
 530 0084 0F4B     		ldr	r3, .L33+8
 531 0086 4FF48062 		mov	r2, #1024
 532 008a 1A60     		str	r2, [r3]
 350:Core/Src/main.c ****     TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 533              		.loc 1 350 5 is_stmt 1 view .LVU160
 350:Core/Src/main.c ****     TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 534              		.loc 1 350 21 is_stmt 0 view .LVU161
 535 008c 0022     		movs	r2, #0
 536 008e 5A60     		str	r2, [r3, #4]
 351:Core/Src/main.c ****     TxHeader.DataLength = FDCAN_DLC_BYTES_8; //Specifies the number of data bytes to be transmitted
 537              		.loc 1 351 5 is_stmt 1 view .LVU162
 351:Core/Src/main.c ****     TxHeader.DataLength = FDCAN_DLC_BYTES_8; //Specifies the number of data bytes to be transmitted
 538              		.loc 1 351 26 is_stmt 0 view .LVU163
 539 0090 9A60     		str	r2, [r3, #8]
 352:Core/Src/main.c ****     TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 540              		.loc 1 352 5 is_stmt 1 view .LVU164
 352:Core/Src/main.c ****     TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 541              		.loc 1 352 25 is_stmt 0 view .LVU165
 542 0092 4FF40021 		mov	r1, #524288
 543 0096 D960     		str	r1, [r3, #12]
 353:Core/Src/main.c ****     TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 544              		.loc 1 353 5 is_stmt 1 view .LVU166
 353:Core/Src/main.c ****     TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 545              		.loc 1 353 34 is_stmt 0 view .LVU167
 546 0098 1A61     		str	r2, [r3, #16]
 354:Core/Src/main.c ****     TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 547              		.loc 1 354 5 is_stmt 1 view .LVU168
 354:Core/Src/main.c ****     TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 548              		.loc 1 354 28 is_stmt 0 view .LVU169
 549 009a 5A61     		str	r2, [r3, #20]
 355:Core/Src/main.c ****     TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 550              		.loc 1 355 5 is_stmt 1 view .LVU170
 355:Core/Src/main.c ****     TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 551              		.loc 1 355 23 is_stmt 0 view .LVU171
 552 009c 9A61     		str	r2, [r3, #24]
 356:Core/Src/main.c ****     TxHeader.MessageMarker = 0;
 553              		.loc 1 356 5 is_stmt 1 view .LVU172
 356:Core/Src/main.c ****     TxHeader.MessageMarker = 0;
 554              		.loc 1 356 33 is_stmt 0 view .LVU173
 555 009e DA61     		str	r2, [r3, #28]
 357:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 2 */
 556              		.loc 1 357 5 is_stmt 1 view .LVU174
 357:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 2 */
 557              		.loc 1 357 28 is_stmt 0 view .LVU175
 558 00a0 1A62     		str	r2, [r3, #32]
 360:Core/Src/main.c **** 
 559              		.loc 1 360 1 view .LVU176
 560 00a2 08B0     		add	sp, sp, #32
 561              	.LCFI10:
 562              		.cfi_remember_state
 563              		.cfi_def_cfa_offset 8
 564              		@ sp needed
 565 00a4 10BD     		pop	{r4, pc}
 566              	.L28:
 567              	.LCFI11:
 568              		.cfi_restore_state
ARM GAS  /tmp/ccyfxfHh.s 			page 26


 312:Core/Src/main.c ****   }
 569              		.loc 1 312 5 is_stmt 1 view .LVU177
 570 00a6 FFF7FEFF 		bl	Error_Handler
 571              	.LVL19:
 572              	.L29:
 326:Core/Src/main.c ****     }
 573              		.loc 1 326 7 view .LVU178
 574 00aa FFF7FEFF 		bl	Error_Handler
 575              	.LVL20:
 576              	.L30:
 334:Core/Src/main.c ****     }
 577              		.loc 1 334 7 view .LVU179
 578 00ae FFF7FEFF 		bl	Error_Handler
 579              	.LVL21:
 580              	.L31:
 340:Core/Src/main.c ****     }
 581              		.loc 1 340 7 view .LVU180
 582 00b2 FFF7FEFF 		bl	Error_Handler
 583              	.LVL22:
 584              	.L32:
 345:Core/Src/main.c ****     }
 585              		.loc 1 345 7 view .LVU181
 586 00b6 FFF7FEFF 		bl	Error_Handler
 587              	.LVL23:
 588              	.L34:
 589 00ba 00BF     		.align	2
 590              	.L33:
 591 00bc 00000000 		.word	.LANCHOR3
 592 00c0 00640040 		.word	1073767424
 593 00c4 00000000 		.word	.LANCHOR2
 594              		.cfi_endproc
 595              	.LFE332:
 597              		.section	.text.MX_TIM4_Init,"ax",%progbits
 598              		.align	1
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 603              	MX_TIM4_Init:
 604              	.LFB334:
 415:Core/Src/main.c **** 
 605              		.loc 1 415 1 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 32
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609 0000 00B5     		push	{lr}
 610              	.LCFI12:
 611              		.cfi_def_cfa_offset 4
 612              		.cfi_offset 14, -4
 613 0002 89B0     		sub	sp, sp, #36
 614              	.LCFI13:
 615              		.cfi_def_cfa_offset 40
 421:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 616              		.loc 1 421 3 view .LVU183
 421:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 617              		.loc 1 421 26 is_stmt 0 view .LVU184
 618 0004 0023     		movs	r3, #0
 619 0006 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccyfxfHh.s 			page 27


 620 0008 0593     		str	r3, [sp, #20]
 621 000a 0693     		str	r3, [sp, #24]
 622 000c 0793     		str	r3, [sp, #28]
 422:Core/Src/main.c **** 
 623              		.loc 1 422 3 is_stmt 1 view .LVU185
 422:Core/Src/main.c **** 
 624              		.loc 1 422 27 is_stmt 0 view .LVU186
 625 000e 0193     		str	r3, [sp, #4]
 626 0010 0293     		str	r3, [sp, #8]
 627 0012 0393     		str	r3, [sp, #12]
 427:Core/Src/main.c ****   htim4.Init.Prescaler = 100 - 1;
 628              		.loc 1 427 3 is_stmt 1 view .LVU187
 427:Core/Src/main.c ****   htim4.Init.Prescaler = 100 - 1;
 629              		.loc 1 427 18 is_stmt 0 view .LVU188
 630 0014 1348     		ldr	r0, .L43
 631 0016 144A     		ldr	r2, .L43+4
 632 0018 0260     		str	r2, [r0]
 428:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 633              		.loc 1 428 3 is_stmt 1 view .LVU189
 428:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 634              		.loc 1 428 24 is_stmt 0 view .LVU190
 635 001a 6322     		movs	r2, #99
 636 001c 4260     		str	r2, [r0, #4]
 429:Core/Src/main.c ****   htim4.Init.Period = 1279;
 637              		.loc 1 429 3 is_stmt 1 view .LVU191
 429:Core/Src/main.c ****   htim4.Init.Period = 1279;
 638              		.loc 1 429 26 is_stmt 0 view .LVU192
 639 001e 8360     		str	r3, [r0, #8]
 430:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 640              		.loc 1 430 3 is_stmt 1 view .LVU193
 430:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 641              		.loc 1 430 21 is_stmt 0 view .LVU194
 642 0020 40F2FF42 		movw	r2, #1279
 643 0024 C260     		str	r2, [r0, #12]
 431:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 644              		.loc 1 431 3 is_stmt 1 view .LVU195
 431:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 645              		.loc 1 431 28 is_stmt 0 view .LVU196
 646 0026 0361     		str	r3, [r0, #16]
 432:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 647              		.loc 1 432 3 is_stmt 1 view .LVU197
 432:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 648              		.loc 1 432 32 is_stmt 0 view .LVU198
 649 0028 8361     		str	r3, [r0, #24]
 433:Core/Src/main.c ****   {
 650              		.loc 1 433 3 is_stmt 1 view .LVU199
 433:Core/Src/main.c ****   {
 651              		.loc 1 433 7 is_stmt 0 view .LVU200
 652 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 653              	.LVL24:
 433:Core/Src/main.c ****   {
 654              		.loc 1 433 6 view .LVU201
 655 002e 98B9     		cbnz	r0, .L40
 437:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 656              		.loc 1 437 3 is_stmt 1 view .LVU202
 437:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 657              		.loc 1 437 34 is_stmt 0 view .LVU203
ARM GAS  /tmp/ccyfxfHh.s 			page 28


 658 0030 4FF48053 		mov	r3, #4096
 659 0034 0493     		str	r3, [sp, #16]
 438:Core/Src/main.c ****   {
 660              		.loc 1 438 3 is_stmt 1 view .LVU204
 438:Core/Src/main.c ****   {
 661              		.loc 1 438 7 is_stmt 0 view .LVU205
 662 0036 04A9     		add	r1, sp, #16
 663 0038 0A48     		ldr	r0, .L43
 664 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 665              	.LVL25:
 438:Core/Src/main.c ****   {
 666              		.loc 1 438 6 view .LVU206
 667 003e 68B9     		cbnz	r0, .L41
 442:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 668              		.loc 1 442 3 is_stmt 1 view .LVU207
 442:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 669              		.loc 1 442 37 is_stmt 0 view .LVU208
 670 0040 2023     		movs	r3, #32
 671 0042 0193     		str	r3, [sp, #4]
 443:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 672              		.loc 1 443 3 is_stmt 1 view .LVU209
 443:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 673              		.loc 1 443 33 is_stmt 0 view .LVU210
 674 0044 0023     		movs	r3, #0
 675 0046 0393     		str	r3, [sp, #12]
 444:Core/Src/main.c ****   {
 676              		.loc 1 444 3 is_stmt 1 view .LVU211
 444:Core/Src/main.c ****   {
 677              		.loc 1 444 7 is_stmt 0 view .LVU212
 678 0048 01A9     		add	r1, sp, #4
 679 004a 0648     		ldr	r0, .L43
 680 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 681              	.LVL26:
 444:Core/Src/main.c ****   {
 682              		.loc 1 444 6 view .LVU213
 683 0050 30B9     		cbnz	r0, .L42
 451:Core/Src/main.c **** 
 684              		.loc 1 451 1 view .LVU214
 685 0052 09B0     		add	sp, sp, #36
 686              	.LCFI14:
 687              		.cfi_remember_state
 688              		.cfi_def_cfa_offset 4
 689              		@ sp needed
 690 0054 5DF804FB 		ldr	pc, [sp], #4
 691              	.L40:
 692              	.LCFI15:
 693              		.cfi_restore_state
 435:Core/Src/main.c ****   }
 694              		.loc 1 435 5 is_stmt 1 view .LVU215
 695 0058 FFF7FEFF 		bl	Error_Handler
 696              	.LVL27:
 697              	.L41:
 440:Core/Src/main.c ****   }
 698              		.loc 1 440 5 view .LVU216
 699 005c FFF7FEFF 		bl	Error_Handler
 700              	.LVL28:
 701              	.L42:
ARM GAS  /tmp/ccyfxfHh.s 			page 29


 446:Core/Src/main.c ****   }
 702              		.loc 1 446 5 view .LVU217
 703 0060 FFF7FEFF 		bl	Error_Handler
 704              	.LVL29:
 705              	.L44:
 706              		.align	2
 707              	.L43:
 708 0064 00000000 		.word	.LANCHOR0
 709 0068 00080040 		.word	1073743872
 710              		.cfi_endproc
 711              	.LFE334:
 713              		.section	.text.MX_ADC2_Init,"ax",%progbits
 714              		.align	1
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 719              	MX_ADC2_Init:
 720              	.LFB331:
 217:Core/Src/main.c **** 
 721              		.loc 1 217 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 32
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725 0000 00B5     		push	{lr}
 726              	.LCFI16:
 727              		.cfi_def_cfa_offset 4
 728              		.cfi_offset 14, -4
 729 0002 89B0     		sub	sp, sp, #36
 730              	.LCFI17:
 731              		.cfi_def_cfa_offset 40
 223:Core/Src/main.c **** 
 732              		.loc 1 223 3 view .LVU219
 223:Core/Src/main.c **** 
 733              		.loc 1 223 26 is_stmt 0 view .LVU220
 734 0004 2022     		movs	r2, #32
 735 0006 0021     		movs	r1, #0
 736 0008 6846     		mov	r0, sp
 737 000a FFF7FEFF 		bl	memset
 738              	.LVL30:
 231:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 739              		.loc 1 231 3 is_stmt 1 view .LVU221
 231:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 740              		.loc 1 231 18 is_stmt 0 view .LVU222
 741 000e 2148     		ldr	r0, .L53
 742 0010 214B     		ldr	r3, .L53+4
 743 0012 0360     		str	r3, [r0]
 232:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 744              		.loc 1 232 3 is_stmt 1 view .LVU223
 232:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 745              		.loc 1 232 29 is_stmt 0 view .LVU224
 746 0014 0023     		movs	r3, #0
 747 0016 4360     		str	r3, [r0, #4]
 233:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 748              		.loc 1 233 3 is_stmt 1 view .LVU225
 233:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 749              		.loc 1 233 25 is_stmt 0 view .LVU226
 750 0018 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccyfxfHh.s 			page 30


 234:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 751              		.loc 1 234 3 is_stmt 1 view .LVU227
 234:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 752              		.loc 1 234 24 is_stmt 0 view .LVU228
 753 001a C360     		str	r3, [r0, #12]
 235:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 754              		.loc 1 235 3 is_stmt 1 view .LVU229
 235:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 755              		.loc 1 235 31 is_stmt 0 view .LVU230
 756 001c 0361     		str	r3, [r0, #16]
 236:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 757              		.loc 1 236 3 is_stmt 1 view .LVU231
 236:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 758              		.loc 1 236 27 is_stmt 0 view .LVU232
 759 001e 0122     		movs	r2, #1
 760 0020 4261     		str	r2, [r0, #20]
 237:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 761              		.loc 1 237 3 is_stmt 1 view .LVU233
 237:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 762              		.loc 1 237 27 is_stmt 0 view .LVU234
 763 0022 0421     		movs	r1, #4
 764 0024 8161     		str	r1, [r0, #24]
 238:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 765              		.loc 1 238 3 is_stmt 1 view .LVU235
 238:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 766              		.loc 1 238 31 is_stmt 0 view .LVU236
 767 0026 0377     		strb	r3, [r0, #28]
 239:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 2;
 768              		.loc 1 239 3 is_stmt 1 view .LVU237
 239:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 2;
 769              		.loc 1 239 33 is_stmt 0 view .LVU238
 770 0028 4377     		strb	r3, [r0, #29]
 240:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 771              		.loc 1 240 3 is_stmt 1 view .LVU239
 240:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 772              		.loc 1 240 30 is_stmt 0 view .LVU240
 773 002a 0221     		movs	r1, #2
 774 002c 0162     		str	r1, [r0, #32]
 241:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T1_TRGO;
 775              		.loc 1 241 3 is_stmt 1 view .LVU241
 241:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T1_TRGO;
 776              		.loc 1 241 36 is_stmt 0 view .LVU242
 777 002e 80F82430 		strb	r3, [r0, #36]
 242:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 778              		.loc 1 242 3 is_stmt 1 view .LVU243
 242:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 779              		.loc 1 242 31 is_stmt 0 view .LVU244
 780 0032 4FF4A461 		mov	r1, #1312
 781 0036 C162     		str	r1, [r0, #44]
 243:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 782              		.loc 1 243 3 is_stmt 1 view .LVU245
 243:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 783              		.loc 1 243 35 is_stmt 0 view .LVU246
 784 0038 4FF48061 		mov	r1, #1024
 785 003c 0163     		str	r1, [r0, #48]
 244:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 786              		.loc 1 244 3 is_stmt 1 view .LVU247
ARM GAS  /tmp/ccyfxfHh.s 			page 31


 244:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 787              		.loc 1 244 36 is_stmt 0 view .LVU248
 788 003e 80F83820 		strb	r2, [r0, #56]
 245:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 789              		.loc 1 245 3 is_stmt 1 view .LVU249
 245:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 790              		.loc 1 245 22 is_stmt 0 view .LVU250
 791 0042 C363     		str	r3, [r0, #60]
 246:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 792              		.loc 1 246 3 is_stmt 1 view .LVU251
 246:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 793              		.loc 1 246 31 is_stmt 0 view .LVU252
 794 0044 80F84030 		strb	r3, [r0, #64]
 247:Core/Src/main.c ****   {
 795              		.loc 1 247 3 is_stmt 1 view .LVU253
 247:Core/Src/main.c ****   {
 796              		.loc 1 247 7 is_stmt 0 view .LVU254
 797 0048 FFF7FEFF 		bl	HAL_ADC_Init
 798              	.LVL31:
 247:Core/Src/main.c ****   {
 799              		.loc 1 247 6 view .LVU255
 800 004c D8B9     		cbnz	r0, .L50
 254:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 801              		.loc 1 254 3 is_stmt 1 view .LVU256
 254:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 802              		.loc 1 254 19 is_stmt 0 view .LVU257
 803 004e 134B     		ldr	r3, .L53+8
 804 0050 0093     		str	r3, [sp]
 255:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 805              		.loc 1 255 3 is_stmt 1 view .LVU258
 255:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 806              		.loc 1 255 16 is_stmt 0 view .LVU259
 807 0052 0623     		movs	r3, #6
 808 0054 0193     		str	r3, [sp, #4]
 256:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 809              		.loc 1 256 3 is_stmt 1 view .LVU260
 256:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 810              		.loc 1 256 24 is_stmt 0 view .LVU261
 811 0056 0023     		movs	r3, #0
 812 0058 0293     		str	r3, [sp, #8]
 257:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 813              		.loc 1 257 3 is_stmt 1 view .LVU262
 257:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 814              		.loc 1 257 22 is_stmt 0 view .LVU263
 815 005a 7F22     		movs	r2, #127
 816 005c 0392     		str	r2, [sp, #12]
 258:Core/Src/main.c ****   sConfig.Offset = 0;
 817              		.loc 1 258 3 is_stmt 1 view .LVU264
 258:Core/Src/main.c ****   sConfig.Offset = 0;
 818              		.loc 1 258 24 is_stmt 0 view .LVU265
 819 005e 0422     		movs	r2, #4
 820 0060 0492     		str	r2, [sp, #16]
 259:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 821              		.loc 1 259 3 is_stmt 1 view .LVU266
 259:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 822              		.loc 1 259 18 is_stmt 0 view .LVU267
 823 0062 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccyfxfHh.s 			page 32


 260:Core/Src/main.c ****   {
 824              		.loc 1 260 3 is_stmt 1 view .LVU268
 260:Core/Src/main.c ****   {
 825              		.loc 1 260 7 is_stmt 0 view .LVU269
 826 0064 6946     		mov	r1, sp
 827 0066 0B48     		ldr	r0, .L53
 828 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 829              	.LVL32:
 260:Core/Src/main.c ****   {
 830              		.loc 1 260 6 view .LVU270
 831 006c 68B9     		cbnz	r0, .L51
 267:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 832              		.loc 1 267 3 is_stmt 1 view .LVU271
 267:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 833              		.loc 1 267 19 is_stmt 0 view .LVU272
 834 006e 0C4B     		ldr	r3, .L53+12
 835 0070 0093     		str	r3, [sp]
 268:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 836              		.loc 1 268 3 is_stmt 1 view .LVU273
 268:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 837              		.loc 1 268 16 is_stmt 0 view .LVU274
 838 0072 0C23     		movs	r3, #12
 839 0074 0193     		str	r3, [sp, #4]
 269:Core/Src/main.c ****   {
 840              		.loc 1 269 3 is_stmt 1 view .LVU275
 269:Core/Src/main.c ****   {
 841              		.loc 1 269 7 is_stmt 0 view .LVU276
 842 0076 6946     		mov	r1, sp
 843 0078 0648     		ldr	r0, .L53
 844 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 845              	.LVL33:
 269:Core/Src/main.c ****   {
 846              		.loc 1 269 6 view .LVU277
 847 007e 30B9     		cbnz	r0, .L52
 277:Core/Src/main.c **** 
 848              		.loc 1 277 1 view .LVU278
 849 0080 09B0     		add	sp, sp, #36
 850              	.LCFI18:
 851              		.cfi_remember_state
 852              		.cfi_def_cfa_offset 4
 853              		@ sp needed
 854 0082 5DF804FB 		ldr	pc, [sp], #4
 855              	.L50:
 856              	.LCFI19:
 857              		.cfi_restore_state
 249:Core/Src/main.c ****   }
 858              		.loc 1 249 5 is_stmt 1 view .LVU279
 859 0086 FFF7FEFF 		bl	Error_Handler
 860              	.LVL34:
 861              	.L51:
 262:Core/Src/main.c ****   }
 862              		.loc 1 262 5 view .LVU280
 863 008a FFF7FEFF 		bl	Error_Handler
 864              	.LVL35:
 865              	.L52:
 271:Core/Src/main.c ****   }
 866              		.loc 1 271 5 view .LVU281
ARM GAS  /tmp/ccyfxfHh.s 			page 33


 867 008e FFF7FEFF 		bl	Error_Handler
 868              	.LVL36:
 869              	.L54:
 870 0092 00BF     		.align	2
 871              	.L53:
 872 0094 00000000 		.word	.LANCHOR4
 873 0098 00010050 		.word	1342177536
 874 009c 00209036 		.word	915415040
 875 00a0 0800900C 		.word	210763784
 876              		.cfi_endproc
 877              	.LFE331:
 879              		.section	.text.MX_TIM1_Init,"ax",%progbits
 880              		.align	1
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	MX_TIM1_Init:
 886              	.LFB333:
 368:Core/Src/main.c **** 
 887              		.loc 1 368 1 view -0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 32
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891 0000 00B5     		push	{lr}
 892              	.LCFI20:
 893              		.cfi_def_cfa_offset 4
 894              		.cfi_offset 14, -4
 895 0002 89B0     		sub	sp, sp, #36
 896              	.LCFI21:
 897              		.cfi_def_cfa_offset 40
 374:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 898              		.loc 1 374 3 view .LVU283
 374:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 899              		.loc 1 374 26 is_stmt 0 view .LVU284
 900 0004 0023     		movs	r3, #0
 901 0006 0493     		str	r3, [sp, #16]
 902 0008 0593     		str	r3, [sp, #20]
 903 000a 0693     		str	r3, [sp, #24]
 904 000c 0793     		str	r3, [sp, #28]
 375:Core/Src/main.c **** 
 905              		.loc 1 375 3 is_stmt 1 view .LVU285
 375:Core/Src/main.c **** 
 906              		.loc 1 375 27 is_stmt 0 view .LVU286
 907 000e 0193     		str	r3, [sp, #4]
 908 0010 0293     		str	r3, [sp, #8]
 909 0012 0393     		str	r3, [sp, #12]
 380:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 910              		.loc 1 380 3 is_stmt 1 view .LVU287
 380:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 911              		.loc 1 380 18 is_stmt 0 view .LVU288
 912 0014 1548     		ldr	r0, .L63
 913 0016 164A     		ldr	r2, .L63+4
 914 0018 0260     		str	r2, [r0]
 381:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 915              		.loc 1 381 3 is_stmt 1 view .LVU289
 381:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 916              		.loc 1 381 24 is_stmt 0 view .LVU290
ARM GAS  /tmp/ccyfxfHh.s 			page 34


 917 001a 4360     		str	r3, [r0, #4]
 382:Core/Src/main.c ****   htim1.Init.Period = 1599;
 918              		.loc 1 382 3 is_stmt 1 view .LVU291
 382:Core/Src/main.c ****   htim1.Init.Period = 1599;
 919              		.loc 1 382 26 is_stmt 0 view .LVU292
 920 001c 8360     		str	r3, [r0, #8]
 383:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 921              		.loc 1 383 3 is_stmt 1 view .LVU293
 383:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 922              		.loc 1 383 21 is_stmt 0 view .LVU294
 923 001e 40F23F62 		movw	r2, #1599
 924 0022 C260     		str	r2, [r0, #12]
 384:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 925              		.loc 1 384 3 is_stmt 1 view .LVU295
 384:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 926              		.loc 1 384 28 is_stmt 0 view .LVU296
 927 0024 0361     		str	r3, [r0, #16]
 385:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 928              		.loc 1 385 3 is_stmt 1 view .LVU297
 385:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 929              		.loc 1 385 32 is_stmt 0 view .LVU298
 930 0026 4361     		str	r3, [r0, #20]
 386:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 931              		.loc 1 386 3 is_stmt 1 view .LVU299
 386:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 932              		.loc 1 386 32 is_stmt 0 view .LVU300
 933 0028 8361     		str	r3, [r0, #24]
 387:Core/Src/main.c ****   {
 934              		.loc 1 387 3 is_stmt 1 view .LVU301
 387:Core/Src/main.c ****   {
 935              		.loc 1 387 7 is_stmt 0 view .LVU302
 936 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 937              	.LVL37:
 387:Core/Src/main.c ****   {
 938              		.loc 1 387 6 view .LVU303
 939 002e B0B9     		cbnz	r0, .L60
 391:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 940              		.loc 1 391 3 is_stmt 1 view .LVU304
 391:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 941              		.loc 1 391 34 is_stmt 0 view .LVU305
 942 0030 4FF48053 		mov	r3, #4096
 943 0034 0493     		str	r3, [sp, #16]
 392:Core/Src/main.c ****   {
 944              		.loc 1 392 3 is_stmt 1 view .LVU306
 392:Core/Src/main.c ****   {
 945              		.loc 1 392 7 is_stmt 0 view .LVU307
 946 0036 04A9     		add	r1, sp, #16
 947 0038 0C48     		ldr	r0, .L63
 948 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 949              	.LVL38:
 392:Core/Src/main.c ****   {
 950              		.loc 1 392 6 view .LVU308
 951 003e 80B9     		cbnz	r0, .L61
 396:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 952              		.loc 1 396 3 is_stmt 1 view .LVU309
 396:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 953              		.loc 1 396 37 is_stmt 0 view .LVU310
ARM GAS  /tmp/ccyfxfHh.s 			page 35


 954 0040 2023     		movs	r3, #32
 955 0042 0193     		str	r3, [sp, #4]
 397:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 956              		.loc 1 397 3 is_stmt 1 view .LVU311
 397:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 957              		.loc 1 397 38 is_stmt 0 view .LVU312
 958 0044 4FF40013 		mov	r3, #2097152
 959 0048 0293     		str	r3, [sp, #8]
 398:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 960              		.loc 1 398 3 is_stmt 1 view .LVU313
 398:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 961              		.loc 1 398 33 is_stmt 0 view .LVU314
 962 004a 0023     		movs	r3, #0
 963 004c 0393     		str	r3, [sp, #12]
 399:Core/Src/main.c ****   {
 964              		.loc 1 399 3 is_stmt 1 view .LVU315
 399:Core/Src/main.c ****   {
 965              		.loc 1 399 7 is_stmt 0 view .LVU316
 966 004e 01A9     		add	r1, sp, #4
 967 0050 0648     		ldr	r0, .L63
 968 0052 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 969              	.LVL39:
 399:Core/Src/main.c ****   {
 970              		.loc 1 399 6 view .LVU317
 971 0056 30B9     		cbnz	r0, .L62
 407:Core/Src/main.c **** 
 972              		.loc 1 407 1 view .LVU318
 973 0058 09B0     		add	sp, sp, #36
 974              	.LCFI22:
 975              		.cfi_remember_state
 976              		.cfi_def_cfa_offset 4
 977              		@ sp needed
 978 005a 5DF804FB 		ldr	pc, [sp], #4
 979              	.L60:
 980              	.LCFI23:
 981              		.cfi_restore_state
 389:Core/Src/main.c ****   }
 982              		.loc 1 389 5 is_stmt 1 view .LVU319
 983 005e FFF7FEFF 		bl	Error_Handler
 984              	.LVL40:
 985              	.L61:
 394:Core/Src/main.c ****   }
 986              		.loc 1 394 5 view .LVU320
 987 0062 FFF7FEFF 		bl	Error_Handler
 988              	.LVL41:
 989              	.L62:
 401:Core/Src/main.c ****   }
 990              		.loc 1 401 5 view .LVU321
 991 0066 FFF7FEFF 		bl	Error_Handler
 992              	.LVL42:
 993              	.L64:
 994 006a 00BF     		.align	2
 995              	.L63:
 996 006c 00000000 		.word	.LANCHOR5
 997 0070 002C0140 		.word	1073818624
 998              		.cfi_endproc
 999              	.LFE333:
ARM GAS  /tmp/ccyfxfHh.s 			page 36


 1001              		.section	.text.SystemClock_Config,"ax",%progbits
 1002              		.align	1
 1003              		.global	SystemClock_Config
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1008              	SystemClock_Config:
 1009              	.LFB330:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1010              		.loc 1 170 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 80
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014 0000 00B5     		push	{lr}
 1015              	.LCFI24:
 1016              		.cfi_def_cfa_offset 4
 1017              		.cfi_offset 14, -4
 1018 0002 95B0     		sub	sp, sp, #84
 1019              	.LCFI25:
 1020              		.cfi_def_cfa_offset 88
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1021              		.loc 1 171 3 view .LVU323
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1022              		.loc 1 171 22 is_stmt 0 view .LVU324
 1023 0004 3822     		movs	r2, #56
 1024 0006 0021     		movs	r1, #0
 1025 0008 06A8     		add	r0, sp, #24
 1026 000a FFF7FEFF 		bl	memset
 1027              	.LVL43:
 172:Core/Src/main.c **** 
 1028              		.loc 1 172 3 is_stmt 1 view .LVU325
 172:Core/Src/main.c **** 
 1029              		.loc 1 172 22 is_stmt 0 view .LVU326
 1030 000e 0023     		movs	r3, #0
 1031 0010 0193     		str	r3, [sp, #4]
 1032 0012 0293     		str	r3, [sp, #8]
 1033 0014 0393     		str	r3, [sp, #12]
 1034 0016 0493     		str	r3, [sp, #16]
 1035 0018 0593     		str	r3, [sp, #20]
 176:Core/Src/main.c **** 
 1036              		.loc 1 176 3 is_stmt 1 view .LVU327
 1037 001a 4FF40070 		mov	r0, #512
 1038 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1039              	.LVL44:
 181:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1040              		.loc 1 181 3 view .LVU328
 181:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1041              		.loc 1 181 36 is_stmt 0 view .LVU329
 1042 0022 0223     		movs	r3, #2
 1043 0024 0693     		str	r3, [sp, #24]
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1044              		.loc 1 182 3 is_stmt 1 view .LVU330
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1045              		.loc 1 182 30 is_stmt 0 view .LVU331
 1046 0026 4FF48072 		mov	r2, #256
 1047 002a 0992     		str	r2, [sp, #36]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccyfxfHh.s 			page 37


 1048              		.loc 1 183 3 is_stmt 1 view .LVU332
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1049              		.loc 1 183 41 is_stmt 0 view .LVU333
 1050 002c 4022     		movs	r2, #64
 1051 002e 0A92     		str	r2, [sp, #40]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1052              		.loc 1 184 3 is_stmt 1 view .LVU334
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1053              		.loc 1 184 34 is_stmt 0 view .LVU335
 1054 0030 0D93     		str	r3, [sp, #52]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 1055              		.loc 1 185 3 is_stmt 1 view .LVU336
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 1056              		.loc 1 185 35 is_stmt 0 view .LVU337
 1057 0032 0E93     		str	r3, [sp, #56]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 1058              		.loc 1 186 3 is_stmt 1 view .LVU338
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 1059              		.loc 1 186 30 is_stmt 0 view .LVU339
 1060 0034 0122     		movs	r2, #1
 1061 0036 0F92     		str	r2, [sp, #60]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1062              		.loc 1 187 3 is_stmt 1 view .LVU340
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1063              		.loc 1 187 30 is_stmt 0 view .LVU341
 1064 0038 0A22     		movs	r2, #10
 1065 003a 1092     		str	r2, [sp, #64]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV8;
 1066              		.loc 1 188 3 is_stmt 1 view .LVU342
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV8;
 1067              		.loc 1 188 30 is_stmt 0 view .LVU343
 1068 003c 1193     		str	r3, [sp, #68]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1069              		.loc 1 189 3 is_stmt 1 view .LVU344
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1070              		.loc 1 189 30 is_stmt 0 view .LVU345
 1071 003e 0822     		movs	r2, #8
 1072 0040 1292     		str	r2, [sp, #72]
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1073              		.loc 1 190 3 is_stmt 1 view .LVU346
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1074              		.loc 1 190 30 is_stmt 0 view .LVU347
 1075 0042 1393     		str	r3, [sp, #76]
 191:Core/Src/main.c ****   {
 1076              		.loc 1 191 3 is_stmt 1 view .LVU348
 191:Core/Src/main.c ****   {
 1077              		.loc 1 191 7 is_stmt 0 view .LVU349
 1078 0044 06A8     		add	r0, sp, #24
 1079 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1080              	.LVL45:
 191:Core/Src/main.c ****   {
 1081              		.loc 1 191 6 view .LVU350
 1082 004a 70B9     		cbnz	r0, .L69
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1083              		.loc 1 198 3 is_stmt 1 view .LVU351
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1084              		.loc 1 198 31 is_stmt 0 view .LVU352
ARM GAS  /tmp/ccyfxfHh.s 			page 38


 1085 004c 0F23     		movs	r3, #15
 1086 004e 0193     		str	r3, [sp, #4]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1087              		.loc 1 200 3 is_stmt 1 view .LVU353
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1088              		.loc 1 200 34 is_stmt 0 view .LVU354
 1089 0050 0123     		movs	r3, #1
 1090 0052 0293     		str	r3, [sp, #8]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1091              		.loc 1 201 3 is_stmt 1 view .LVU355
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1092              		.loc 1 201 35 is_stmt 0 view .LVU356
 1093 0054 0021     		movs	r1, #0
 1094 0056 0391     		str	r1, [sp, #12]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1095              		.loc 1 202 3 is_stmt 1 view .LVU357
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1096              		.loc 1 202 36 is_stmt 0 view .LVU358
 1097 0058 0491     		str	r1, [sp, #16]
 203:Core/Src/main.c **** 
 1098              		.loc 1 203 3 is_stmt 1 view .LVU359
 203:Core/Src/main.c **** 
 1099              		.loc 1 203 36 is_stmt 0 view .LVU360
 1100 005a 0591     		str	r1, [sp, #20]
 205:Core/Src/main.c ****   {
 1101              		.loc 1 205 3 is_stmt 1 view .LVU361
 205:Core/Src/main.c ****   {
 1102              		.loc 1 205 7 is_stmt 0 view .LVU362
 1103 005c 01A8     		add	r0, sp, #4
 1104 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1105              	.LVL46:
 205:Core/Src/main.c ****   {
 1106              		.loc 1 205 6 view .LVU363
 1107 0062 20B9     		cbnz	r0, .L70
 209:Core/Src/main.c **** 
 1108              		.loc 1 209 1 view .LVU364
 1109 0064 15B0     		add	sp, sp, #84
 1110              	.LCFI26:
 1111              		.cfi_remember_state
 1112              		.cfi_def_cfa_offset 4
 1113              		@ sp needed
 1114 0066 5DF804FB 		ldr	pc, [sp], #4
 1115              	.L69:
 1116              	.LCFI27:
 1117              		.cfi_restore_state
 193:Core/Src/main.c ****   }
 1118              		.loc 1 193 5 is_stmt 1 view .LVU365
 1119 006a FFF7FEFF 		bl	Error_Handler
 1120              	.LVL47:
 1121              	.L70:
 207:Core/Src/main.c ****   }
 1122              		.loc 1 207 5 view .LVU366
 1123 006e FFF7FEFF 		bl	Error_Handler
 1124              	.LVL48:
 1125              		.cfi_endproc
 1126              	.LFE330:
 1128              		.section	.text.main,"ax",%progbits
ARM GAS  /tmp/ccyfxfHh.s 			page 39


 1129              		.align	1
 1130              		.global	main
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1135              	main:
 1136              	.LFB329:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1137              		.loc 1 77 1 view -0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 8
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1142              	.LCFI28:
 1143              		.cfi_def_cfa_offset 28
 1144              		.cfi_offset 4, -28
 1145              		.cfi_offset 5, -24
 1146              		.cfi_offset 6, -20
 1147              		.cfi_offset 7, -16
 1148              		.cfi_offset 8, -12
 1149              		.cfi_offset 9, -8
 1150              		.cfi_offset 14, -4
 1151 0004 83B0     		sub	sp, sp, #12
 1152              	.LCFI29:
 1153              		.cfi_def_cfa_offset 40
  84:Core/Src/main.c **** 
 1154              		.loc 1 84 3 view .LVU368
 1155 0006 FFF7FEFF 		bl	HAL_Init
 1156              	.LVL49:
  90:Core/Src/main.c **** 
 1157              		.loc 1 90 3 view .LVU369
 1158 000a FFF7FEFF 		bl	SystemClock_Config
 1159              	.LVL50:
  96:Core/Src/main.c ****   MX_DMA_Init();
 1160              		.loc 1 96 3 view .LVU370
 1161 000e FFF7FEFF 		bl	MX_GPIO_Init
 1162              	.LVL51:
  97:Core/Src/main.c ****   MX_FDCAN1_Init();
 1163              		.loc 1 97 3 view .LVU371
 1164 0012 FFF7FEFF 		bl	MX_DMA_Init
 1165              	.LVL52:
  98:Core/Src/main.c ****   MX_TIM4_Init();
 1166              		.loc 1 98 3 view .LVU372
 1167 0016 FFF7FEFF 		bl	MX_FDCAN1_Init
 1168              	.LVL53:
  99:Core/Src/main.c ****   MX_ADC2_Init();
 1169              		.loc 1 99 3 view .LVU373
 1170 001a FFF7FEFF 		bl	MX_TIM4_Init
 1171              	.LVL54:
 100:Core/Src/main.c ****   MX_TIM1_Init();
 1172              		.loc 1 100 3 view .LVU374
 1173 001e FFF7FEFF 		bl	MX_ADC2_Init
 1174              	.LVL55:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1175              		.loc 1 101 3 view .LVU375
 1176 0022 FFF7FEFF 		bl	MX_TIM1_Init
 1177              	.LVL56:
ARM GAS  /tmp/ccyfxfHh.s 			page 40


 105:Core/Src/main.c ****   uint8_t  digital_word = 0; //Digital Input Data
 1178              		.loc 1 105 3 view .LVU376
 106:Core/Src/main.c ****   uint16_t analog1_word = 0; //Analog Input Data 1
 1179              		.loc 1 106 3 view .LVU377
 107:Core/Src/main.c ****   uint16_t analog2_word = 0; //Analog Input Data 2
 1180              		.loc 1 107 3 view .LVU378
 108:Core/Src/main.c ****   uint8_t analog1_half1 = 0; //Lower 8 bits
 1181              		.loc 1 108 3 view .LVU379
 109:Core/Src/main.c ****   uint8_t analog1_half2 = 0; //Upper 4 bits
 1182              		.loc 1 109 3 view .LVU380
 110:Core/Src/main.c ****   uint8_t analog2_half1 = 0; //Lower 8 bits
 1183              		.loc 1 110 3 view .LVU381
 111:Core/Src/main.c ****   uint8_t analog2_half2 = 0; //Upper 4 bits
 1184              		.loc 1 111 3 view .LVU382
 112:Core/Src/main.c **** 
 1185              		.loc 1 112 3 view .LVU383
 115:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1186              		.loc 1 115 3 view .LVU384
 1187 0026 2E48     		ldr	r0, .L74
 1188 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1189              	.LVL57:
 116:Core/Src/main.c **** 
 1190              		.loc 1 116 3 view .LVU385
 1191 002c 2D48     		ldr	r0, .L74+4
 1192 002e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1193              	.LVL58:
 119:Core/Src/main.c ****   /* USER CODE END 2 */
 1194              		.loc 1 119 3 view .LVU386
 1195 0032 0222     		movs	r2, #2
 1196 0034 01A9     		add	r1, sp, #4
 1197 0036 2C48     		ldr	r0, .L74+8
 1198 0038 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1199              	.LVL59:
 1200              	.L72:
 124:Core/Src/main.c ****   {
 1201              		.loc 1 124 3 discriminator 1 view .LVU387
 129:Core/Src/main.c **** 	analog2_word = AdcResults[1]; //Analog Input Data 2
 1202              		.loc 1 129 2 discriminator 1 view .LVU388
 129:Core/Src/main.c **** 	analog2_word = AdcResults[1]; //Analog Input Data 2
 1203              		.loc 1 129 15 is_stmt 0 discriminator 1 view .LVU389
 1204 003c BDF80450 		ldrh	r5, [sp, #4]
 1205              	.LVL60:
 130:Core/Src/main.c **** 	analog1_half1 = (0b11111111 & analog1_word); //lower 8 bits
 1206              		.loc 1 130 2 is_stmt 1 discriminator 1 view .LVU390
 130:Core/Src/main.c **** 	analog1_half1 = (0b11111111 & analog1_word); //lower 8 bits
 1207              		.loc 1 130 15 is_stmt 0 discriminator 1 view .LVU391
 1208 0040 BDF80660 		ldrh	r6, [sp, #6]
 1209              	.LVL61:
 131:Core/Src/main.c **** 	analog1_half2 = ((0b11111111<<8) & analog1_word)>>8; //upper 8 bits
 1210              		.loc 1 131 2 is_stmt 1 discriminator 1 view .LVU392
 131:Core/Src/main.c **** 	analog1_half2 = ((0b11111111<<8) & analog1_word)>>8; //upper 8 bits
 1211              		.loc 1 131 16 is_stmt 0 discriminator 1 view .LVU393
 1212 0044 EFB2     		uxtb	r7, r5
 1213              	.LVL62:
 132:Core/Src/main.c **** 	analog2_half1 = (0b11111111 & analog2_word); //lower 8 bits
 1214              		.loc 1 132 2 is_stmt 1 discriminator 1 view .LVU394
 132:Core/Src/main.c **** 	analog2_half1 = (0b11111111 & analog2_word); //lower 8 bits
ARM GAS  /tmp/ccyfxfHh.s 			page 41


 1215              		.loc 1 132 16 is_stmt 0 discriminator 1 view .LVU395
 1216 0046 2D0A     		lsrs	r5, r5, #8
 1217              	.LVL63:
 133:Core/Src/main.c **** 	analog2_half2 = ((0b11111111<<8) & analog2_word)>>8; //upper 8 bits
 1218              		.loc 1 133 2 is_stmt 1 discriminator 1 view .LVU396
 133:Core/Src/main.c **** 	analog2_half2 = ((0b11111111<<8) & analog2_word)>>8; //upper 8 bits
 1219              		.loc 1 133 16 is_stmt 0 discriminator 1 view .LVU397
 1220 0048 5FFA86F8 		uxtb	r8, r6
 1221              	.LVL64:
 134:Core/Src/main.c **** 
 1222              		.loc 1 134 2 is_stmt 1 discriminator 1 view .LVU398
 134:Core/Src/main.c **** 
 1223              		.loc 1 134 16 is_stmt 0 discriminator 1 view .LVU399
 1224 004c 360A     		lsrs	r6, r6, #8
 1225              	.LVL65:
 138:Core/Src/main.c **** 	digital_word = digital_word |  HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13); 	//PB6, J8
 1226              		.loc 1 138 2 is_stmt 1 discriminator 1 view .LVU400
 139:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14)) <<1; 		//PB5, J5
 1227              		.loc 1 139 2 discriminator 1 view .LVU401
 139:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14)) <<1; 		//PB5, J5
 1228              		.loc 1 139 33 is_stmt 0 discriminator 1 view .LVU402
 1229 004e DFF8A890 		ldr	r9, .L74+24
 1230 0052 4FF40051 		mov	r1, #8192
 1231 0056 4846     		mov	r0, r9
 1232 0058 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1233              	.LVL66:
 139:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14)) <<1; 		//PB5, J5
 1234              		.loc 1 139 33 discriminator 1 view .LVU403
 1235 005c 0446     		mov	r4, r0
 1236              	.LVL67:
 140:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) <<2; 	//PB4, J13
 1237              		.loc 1 140 2 is_stmt 1 discriminator 1 view .LVU404
 140:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) <<2; 	//PB4, J13
 1238              		.loc 1 140 33 is_stmt 0 discriminator 1 view .LVU405
 1239 005e 4FF48041 		mov	r1, #16384
 1240 0062 4846     		mov	r0, r9
 1241 0064 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1242              	.LVL68:
 140:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) <<2; 	//PB4, J13
 1243              		.loc 1 140 30 discriminator 1 view .LVU406
 1244 0068 44EA4004 		orr	r4, r4, r0, lsl #1
 1245              	.LVL69:
 140:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15)) <<2; 	//PB4, J13
 1246              		.loc 1 140 30 discriminator 1 view .LVU407
 1247 006c 64B2     		sxtb	r4, r4
 1248              	.LVL70:
 141:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) <<3; 	//PB3, J11
 1249              		.loc 1 141 2 is_stmt 1 discriminator 1 view .LVU408
 141:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) <<3; 	//PB3, J11
 1250              		.loc 1 141 33 is_stmt 0 discriminator 1 view .LVU409
 1251 006e 4FF40041 		mov	r1, #32768
 1252 0072 4846     		mov	r0, r9
 1253 0074 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1254              	.LVL71:
 141:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) <<3; 	//PB3, J11
 1255              		.loc 1 141 30 discriminator 1 view .LVU410
 1256 0078 44EA8004 		orr	r4, r4, r0, lsl #2
ARM GAS  /tmp/ccyfxfHh.s 			page 42


 1257              	.LVL72:
 141:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_1)) <<3; 	//PB3, J11
 1258              		.loc 1 141 30 discriminator 1 view .LVU411
 1259 007c 64B2     		sxtb	r4, r4
 1260              	.LVL73:
 142:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) <<4; 	//PB2, J9
 1261              		.loc 1 142 2 is_stmt 1 discriminator 1 view .LVU412
 142:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) <<4; 	//PB2, J9
 1262              		.loc 1 142 33 is_stmt 0 discriminator 1 view .LVU413
 1263 007e 0221     		movs	r1, #2
 1264 0080 1A48     		ldr	r0, .L74+12
 1265 0082 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1266              	.LVL74:
 142:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) <<4; 	//PB2, J9
 1267              		.loc 1 142 30 discriminator 1 view .LVU414
 1268 0086 44EAC004 		orr	r4, r4, r0, lsl #3
 1269              	.LVL75:
 142:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) <<4; 	//PB2, J9
 1270              		.loc 1 142 30 discriminator 1 view .LVU415
 1271 008a 64B2     		sxtb	r4, r4
 1272              	.LVL76:
 143:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) <<5; 	//PB1, J7
 1273              		.loc 1 143 2 is_stmt 1 discriminator 1 view .LVU416
 143:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) <<5; 	//PB1, J7
 1274              		.loc 1 143 33 is_stmt 0 discriminator 1 view .LVU417
 1275 008c 0121     		movs	r1, #1
 1276 008e 4FF09040 		mov	r0, #1207959552
 1277 0092 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1278              	.LVL77:
 143:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) <<5; 	//PB1, J7
 1279              		.loc 1 143 30 discriminator 1 view .LVU418
 1280 0096 44EA0014 		orr	r4, r4, r0, lsl #4
 1281              	.LVL78:
 143:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) <<5; 	//PB1, J7
 1282              		.loc 1 143 30 discriminator 1 view .LVU419
 1283 009a 64B2     		sxtb	r4, r4
 1284              	.LVL79:
 144:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) <<6; 	//PB9, J12
 1285              		.loc 1 144 2 is_stmt 1 discriminator 1 view .LVU420
 144:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) <<6; 	//PB9, J12
 1286              		.loc 1 144 33 is_stmt 0 discriminator 1 view .LVU421
 1287 009c 0221     		movs	r1, #2
 1288 009e 4FF09040 		mov	r0, #1207959552
 1289 00a2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1290              	.LVL80:
 144:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) <<6; 	//PB9, J12
 1291              		.loc 1 144 30 discriminator 1 view .LVU422
 1292 00a6 44EA4014 		orr	r4, r4, r0, lsl #5
 1293              	.LVL81:
 144:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)) <<6; 	//PB9, J12
 1294              		.loc 1 144 30 discriminator 1 view .LVU423
 1295 00aa 64B2     		sxtb	r4, r4
 1296              	.LVL82:
 145:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) <<7; 	//PB8, J10
 1297              		.loc 1 145 2 is_stmt 1 discriminator 1 view .LVU424
 145:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) <<7; 	//PB8, J10
 1298              		.loc 1 145 33 is_stmt 0 discriminator 1 view .LVU425
ARM GAS  /tmp/ccyfxfHh.s 			page 43


 1299 00ac 8021     		movs	r1, #128
 1300 00ae 4FF09040 		mov	r0, #1207959552
 1301 00b2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1302              	.LVL83:
 145:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) <<7; 	//PB8, J10
 1303              		.loc 1 145 30 discriminator 1 view .LVU426
 1304 00b6 44EA8014 		orr	r4, r4, r0, lsl #6
 1305              	.LVL84:
 145:Core/Src/main.c **** 	digital_word = digital_word | (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0)) <<7; 	//PB8, J10
 1306              		.loc 1 145 30 discriminator 1 view .LVU427
 1307 00ba 64B2     		sxtb	r4, r4
 1308              	.LVL85:
 146:Core/Src/main.c **** 
 1309              		.loc 1 146 2 is_stmt 1 discriminator 1 view .LVU428
 146:Core/Src/main.c **** 
 1310              		.loc 1 146 33 is_stmt 0 discriminator 1 view .LVU429
 1311 00bc 0121     		movs	r1, #1
 1312 00be 0C48     		ldr	r0, .L74+16
 1313 00c0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1314              	.LVL86:
 146:Core/Src/main.c **** 
 1315              		.loc 1 146 30 discriminator 1 view .LVU430
 1316 00c4 44EAC014 		orr	r4, r4, r0, lsl #7
 1317              	.LVL87:
 149:Core/Src/main.c **** 	TxData[1] = analog2_half1;//analog2 lower 8 bits
 1318              		.loc 1 149 2 is_stmt 1 discriminator 1 view .LVU431
 149:Core/Src/main.c **** 	TxData[1] = analog2_half1;//analog2 lower 8 bits
 1319              		.loc 1 149 12 is_stmt 0 discriminator 1 view .LVU432
 1320 00c8 0A4B     		ldr	r3, .L74+20
 1321 00ca 1E70     		strb	r6, [r3]
 150:Core/Src/main.c **** 	TxData[2] = analog1_half2;//analog1 upper 4 bits
 1322              		.loc 1 150 2 is_stmt 1 discriminator 1 view .LVU433
 150:Core/Src/main.c **** 	TxData[2] = analog1_half2;//analog1 upper 4 bits
 1323              		.loc 1 150 12 is_stmt 0 discriminator 1 view .LVU434
 1324 00cc 83F80180 		strb	r8, [r3, #1]
 151:Core/Src/main.c **** 	TxData[3] = analog1_half1;//analog1 lower 8 bits
 1325              		.loc 1 151 2 is_stmt 1 discriminator 1 view .LVU435
 151:Core/Src/main.c **** 	TxData[3] = analog1_half1;//analog1 lower 8 bits
 1326              		.loc 1 151 12 is_stmt 0 discriminator 1 view .LVU436
 1327 00d0 9D70     		strb	r5, [r3, #2]
 152:Core/Src/main.c **** 	TxData[4] = digital_word; //Digital input Byte
 1328              		.loc 1 152 2 is_stmt 1 discriminator 1 view .LVU437
 152:Core/Src/main.c **** 	TxData[4] = digital_word; //Digital input Byte
 1329              		.loc 1 152 12 is_stmt 0 discriminator 1 view .LVU438
 1330 00d2 DF70     		strb	r7, [r3, #3]
 153:Core/Src/main.c **** 	TxData[5] = 0x00;
 1331              		.loc 1 153 2 is_stmt 1 discriminator 1 view .LVU439
 153:Core/Src/main.c **** 	TxData[5] = 0x00;
 1332              		.loc 1 153 12 is_stmt 0 discriminator 1 view .LVU440
 1333 00d4 1C71     		strb	r4, [r3, #4]
 154:Core/Src/main.c **** 	TxData[6] = 0x00;
 1334              		.loc 1 154 2 is_stmt 1 discriminator 1 view .LVU441
 154:Core/Src/main.c **** 	TxData[6] = 0x00;
 1335              		.loc 1 154 12 is_stmt 0 discriminator 1 view .LVU442
 1336 00d6 0022     		movs	r2, #0
 1337 00d8 5A71     		strb	r2, [r3, #5]
 155:Core/Src/main.c **** 	TxData[7] = 0x00;
ARM GAS  /tmp/ccyfxfHh.s 			page 44


 1338              		.loc 1 155 2 is_stmt 1 discriminator 1 view .LVU443
 155:Core/Src/main.c **** 	TxData[7] = 0x00;
 1339              		.loc 1 155 12 is_stmt 0 discriminator 1 view .LVU444
 1340 00da 9A71     		strb	r2, [r3, #6]
 156:Core/Src/main.c **** 
 1341              		.loc 1 156 2 is_stmt 1 discriminator 1 view .LVU445
 156:Core/Src/main.c **** 
 1342              		.loc 1 156 12 is_stmt 0 discriminator 1 view .LVU446
 1343 00dc DA71     		strb	r2, [r3, #7]
 124:Core/Src/main.c ****   {
 1344              		.loc 1 124 9 is_stmt 1 discriminator 1 view .LVU447
 1345 00de ADE7     		b	.L72
 1346              	.L75:
 1347              		.align	2
 1348              	.L74:
 1349 00e0 00000000 		.word	.LANCHOR5
 1350 00e4 00000000 		.word	.LANCHOR0
 1351 00e8 00000000 		.word	.LANCHOR4
 1352 00ec 00140048 		.word	1207964672
 1353 00f0 00040048 		.word	1207960576
 1354 00f4 00000000 		.word	.LANCHOR1
 1355 00f8 00080048 		.word	1207961600
 1356              		.cfi_endproc
 1357              	.LFE329:
 1359              		.global	TxData
 1360              		.global	TxHeader
 1361              		.global	htim4
 1362              		.global	htim1
 1363              		.global	hfdcan1
 1364              		.global	hdma_adc2
 1365              		.global	hadc2
 1366              		.section	.bss.TxData,"aw",%nobits
 1367              		.align	2
 1368              		.set	.LANCHOR1,. + 0
 1371              	TxData:
 1372 0000 00000000 		.space	8
 1372      00000000 
 1373              		.section	.bss.TxHeader,"aw",%nobits
 1374              		.align	2
 1375              		.set	.LANCHOR2,. + 0
 1378              	TxHeader:
 1379 0000 00000000 		.space	36
 1379      00000000 
 1379      00000000 
 1379      00000000 
 1379      00000000 
 1380              		.section	.bss.hadc2,"aw",%nobits
 1381              		.align	2
 1382              		.set	.LANCHOR4,. + 0
 1385              	hadc2:
 1386 0000 00000000 		.space	108
 1386      00000000 
 1386      00000000 
 1386      00000000 
 1386      00000000 
 1387              		.section	.bss.hdma_adc2,"aw",%nobits
 1388              		.align	2
ARM GAS  /tmp/ccyfxfHh.s 			page 45


 1391              	hdma_adc2:
 1392 0000 00000000 		.space	96
 1392      00000000 
 1392      00000000 
 1392      00000000 
 1392      00000000 
 1393              		.section	.bss.hfdcan1,"aw",%nobits
 1394              		.align	2
 1395              		.set	.LANCHOR3,. + 0
 1398              	hfdcan1:
 1399 0000 00000000 		.space	100
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1400              		.section	.bss.htim1,"aw",%nobits
 1401              		.align	2
 1402              		.set	.LANCHOR5,. + 0
 1405              	htim1:
 1406 0000 00000000 		.space	76
 1406      00000000 
 1406      00000000 
 1406      00000000 
 1406      00000000 
 1407              		.section	.bss.htim4,"aw",%nobits
 1408              		.align	2
 1409              		.set	.LANCHOR0,. + 0
 1412              	htim4:
 1413 0000 00000000 		.space	76
 1413      00000000 
 1413      00000000 
 1413      00000000 
 1413      00000000 
 1414              		.text
 1415              	.Letext0:
 1416              		.file 3 "/home/dev/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1417              		.file 4 "/home/dev/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1418              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1419              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1420              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1421              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 1422              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1423              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1424              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 1425              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_fdcan.h"
 1426              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1427              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 1428              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
 1429              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 1430              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1431              		.file 18 "<built-in>"
ARM GAS  /tmp/ccyfxfHh.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccyfxfHh.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccyfxfHh.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccyfxfHh.s:174    .text.MX_GPIO_Init:00000000000000a0 $d
     /tmp/ccyfxfHh.s:182    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccyfxfHh.s:187    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccyfxfHh.s:250    .text.MX_DMA_Init:0000000000000040 $d
     /tmp/ccyfxfHh.s:255    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccyfxfHh.s:261    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccyfxfHh.s:287    .text.HAL_ADC_ConvCpltCallback:0000000000000010 $d
     /tmp/ccyfxfHh.s:292    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccyfxfHh.s:298    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccyfxfHh.s:337    .text.HAL_TIM_PeriodElapsedCallback:0000000000000018 $d
     /tmp/ccyfxfHh.s:345    .text.Error_Handler:0000000000000000 $t
     /tmp/ccyfxfHh.s:351    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccyfxfHh.s:383    .text.MX_FDCAN1_Init:0000000000000000 $t
     /tmp/ccyfxfHh.s:388    .text.MX_FDCAN1_Init:0000000000000000 MX_FDCAN1_Init
     /tmp/ccyfxfHh.s:591    .text.MX_FDCAN1_Init:00000000000000bc $d
     /tmp/ccyfxfHh.s:598    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccyfxfHh.s:603    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccyfxfHh.s:708    .text.MX_TIM4_Init:0000000000000064 $d
     /tmp/ccyfxfHh.s:714    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccyfxfHh.s:719    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccyfxfHh.s:872    .text.MX_ADC2_Init:0000000000000094 $d
     /tmp/ccyfxfHh.s:880    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccyfxfHh.s:885    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccyfxfHh.s:996    .text.MX_TIM1_Init:000000000000006c $d
     /tmp/ccyfxfHh.s:1002   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccyfxfHh.s:1008   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccyfxfHh.s:1129   .text.main:0000000000000000 $t
     /tmp/ccyfxfHh.s:1135   .text.main:0000000000000000 main
     /tmp/ccyfxfHh.s:1349   .text.main:00000000000000e0 $d
     /tmp/ccyfxfHh.s:1371   .bss.TxData:0000000000000000 TxData
     /tmp/ccyfxfHh.s:1378   .bss.TxHeader:0000000000000000 TxHeader
     /tmp/ccyfxfHh.s:1412   .bss.htim4:0000000000000000 htim4
     /tmp/ccyfxfHh.s:1405   .bss.htim1:0000000000000000 htim1
     /tmp/ccyfxfHh.s:1398   .bss.hfdcan1:0000000000000000 hfdcan1
     /tmp/ccyfxfHh.s:1391   .bss.hdma_adc2:0000000000000000 hdma_adc2
     /tmp/ccyfxfHh.s:1385   .bss.hadc2:0000000000000000 hadc2
     /tmp/ccyfxfHh.s:1367   .bss.TxData:0000000000000000 $d
     /tmp/ccyfxfHh.s:1374   .bss.TxHeader:0000000000000000 $d
     /tmp/ccyfxfHh.s:1381   .bss.hadc2:0000000000000000 $d
     /tmp/ccyfxfHh.s:1388   .bss.hdma_adc2:0000000000000000 $d
     /tmp/ccyfxfHh.s:1394   .bss.hfdcan1:0000000000000000 $d
     /tmp/ccyfxfHh.s:1401   .bss.htim1:0000000000000000 $d
     /tmp/ccyfxfHh.s:1408   .bss.htim4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_TogglePin
HAL_FDCAN_AddMessageToTxFifoQ
HAL_FDCAN_Init
HAL_FDCAN_ConfigFilter
HAL_FDCAN_ConfigGlobalFilter
ARM GAS  /tmp/ccyfxfHh.s 			page 47


HAL_FDCAN_Start
HAL_FDCAN_ActivateNotification
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_GPIO_ReadPin
